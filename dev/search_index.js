var documenterSearchIndex = {"docs":
[{"location":"algorithms/#Algorithms","page":"Algorithms","title":"Algorithms","text":"","category":"section"},{"location":"algorithms/#pmedian","page":"Algorithms","title":"pmedian","text":"","category":"section"},{"location":"algorithms/","page":"Algorithms","title":"Algorithms","text":"OperationsResearchModels.pmedian","category":"page"},{"location":"algorithms/#OperationsResearchModels.PMedian.pmedian","page":"Algorithms","title":"OperationsResearchModels.PMedian.pmedian","text":"pmedian(data, ncenters)\n\nArguments\n\ndata::Matrix: Coordinates of locations \nncenters::Int: Number of centers \n\n# Descriptions  The function calculates Euclidean distances between all possible rows of the matrix data.  ncenters locations are then selected that minimizes the total distances to the nearest rows. \n\nOutput\n\nDict{String, Any}: The dictionary object that holds the results. \n\nExample\n\njulia> data1 = rand(10, 2);\n\njulia> data2 = rand(10, 2) .+ 50;\n\njulia> data3 = rand(10, 2) .+ 100;\n\njulia> data = vcat(data1, data2, data3);\n\njulia> result = pmedian(data, 3) Dict{String, Any} with 5 entries:   \"centers\"   => [6, 13, 25]   \"model\"     => A JuMP Model…   \"objective\" => 10.5921   \"z\"         => [-0.0 -0.0 … 0.0 0.0; -0.0 -0.0 … 0.0 0.0; … ; 0.0 0.0 … -0.0 0.0; 0.0 0.0 … 0.0 -0.0]   \"y\"         => [0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, 0.0  …  0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0,…\n\n\n\n\n\n","category":"function"}]
}
